title:
  en: Emergency
  fr: secours
  de: Schutz & Rettung
  es: Emergencia
description:
  en: Emergency services like fire stations, ambulances, police, etc.
  fr: Secours et services d'urgence comme les pompiers, les ambulances, la police, etc.
  de: Schutz & Rettung wie Feuerwehr, Rettungsdienste, Polizei, etc.
  es: Emergencia como estaciones de bomberos, ambulancias, policía, etc.

# Set your own OSM username, has admin right on all groups.
main_contacts: [frodrigo]
# Free keywords to describe the project
project_tags: [emergency]

# Set a projection relative to the data location. Should be in meter unit.
# If you don't know the projection, set the corresponding UTM Zone ESRID code from.
local_srid: 2056

# Distance between objects to be considered as a LoCha cluster.
locha_cluster_distance: 100


user_groups:
  # Track the OSM tags on an area
  zurich:
    title:
      en: Zürich
      fr: Zurich
      de: Zürich
      es: Zúrich
    # Use the boundary polygon defined by the corresponding OSM relation id
    polygon: https://polygons.openstreetmap.fr/get_geojson.py?id=1682248&params=0.020000-0.005000-0.005000
    # Tags definition in the siblings export directory
    osm_tags: https://clearance.teritorio.xyz/api/0.1/emergency/extract/emergency.osm_tags.json
    users: [] # OSM usernames, validation right on this group


# Validators only apply on objects selected by user_groups.
# Validators order matter, action_force clear all previous actions.
validators:
  # Accept geometry of new objects
  geom_new:
    instance: Validators::GeomNewObject
    action: accept

  # Geometry changes threshold
  geom_changes_insignificant:
    instance: Validators::GeomChanges
    dist: 2 # 2 meters
    reject: geom_changes_significant
    accept: geom_changes_insignificant

  # Core validator, does not change
  tags_changes_significant:
    instance: Validators::TagsChanges
    reject: tags_changes_significant
    accept: tags_changes_non_significant

  # Accept changes by white listed users
  # OSM username you trust, always consider changing safe.
  # Maybe trusted users or trusted bots.
  # Concerning users from your own organization,
  # you can't accept changes by default, and practice peer review validation.
  user_white_list:
    instance: Validators::UserList
    description: Changes by white listed user
    list:
      - davidfaure_bot
      - b-jazz-bot
    action_force: accept

  # Reject changes by black listed users
  # OSM username you don't trust, always consider changing unsafe.
  user_black_list:
    instance: Validators::UserList
    description: Changes black listed user
    list: []
    action: reject

  # Reject deleted objects.
  # Always consider deletion as unsafe.
  deleted:
    action_force: reject
